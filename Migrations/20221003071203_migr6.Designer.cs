// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using demo.Models;

#nullable disable

namespace demo.Migrations
{
    [DbContext(typeof(SampleContext))]
    [Migration("20221003071203_migr6")]
    partial class migr6
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("demo.Models.AdminTbl", b =>
                {
                    b.Property<int>("AdminId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AdminId"), 1L, 1);

                    b.Property<string>("AdminName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AdminId");

                    b.ToTable("adminTbls");
                });

            modelBuilder.Entity("demo.Models.BookingTbl", b =>
                {
                    b.Property<int>("BookingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookingId"), 1L, 1);

                    b.Property<int>("AmountTotal")
                        .HasColumnType("int");

                    b.Property<int?>("MovieId")
                        .HasColumnType("int");

                    b.Property<int>("NoOfTickets")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("BookingId");

                    b.HasIndex("MovieId");

                    b.HasIndex("UserId");

                    b.ToTable("BookingTbl");
                });

            modelBuilder.Entity("demo.Models.MovieTbl", b =>
                {
                    b.Property<int>("MovieId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MovieId"), 1L, 1);

                    b.Property<int>("Cost")
                        .HasColumnType("int");

                    b.Property<DateTime>("From")
                        .HasColumnType("datetime2");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MovieName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Slot")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("To")
                        .HasColumnType("datetime2");

                    b.Property<int>("capacity")
                        .HasColumnType("int");

                    b.HasKey("MovieId");

                    b.ToTable("movieTbls");
                });

            modelBuilder.Entity("demo.Models.OrderDetails", b =>
                {
                    b.Property<int>("OrderDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderDetailId"), 1L, 1);

                    b.Property<int?>("BookingTblBookingId")
                        .HasColumnType("int");

                    b.Property<int>("Cost")
                        .HasColumnType("int");

                    b.Property<int>("NoOfTickets")
                        .HasColumnType("int");

                    b.Property<int?>("OrderMasterTblOrderMasterId")
                        .HasColumnType("int");

                    b.HasKey("OrderDetailId");

                    b.HasIndex("BookingTblBookingId");

                    b.HasIndex("OrderMasterTblOrderMasterId");

                    b.ToTable("OrderDetails");
                });

            modelBuilder.Entity("demo.Models.OrderMasterTbl", b =>
                {
                    b.Property<int>("OrderMasterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderMasterId"), 1L, 1);

                    b.Property<int>("CardNo")
                        .HasColumnType("int");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("OrderMasterId");

                    b.HasIndex("UserId");

                    b.ToTable("OrderMasterTbls");
                });

            modelBuilder.Entity("demo.Models.UserTbl", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("userTbls");
                });

            modelBuilder.Entity("demo.Models.BookingTbl", b =>
                {
                    b.HasOne("demo.Models.MovieTbl", "Movie")
                        .WithMany("Bookings")
                        .HasForeignKey("MovieId");

                    b.HasOne("demo.Models.UserTbl", "User")
                        .WithMany("BookingTbls")
                        .HasForeignKey("UserId");

                    b.Navigation("Movie");

                    b.Navigation("User");
                });

            modelBuilder.Entity("demo.Models.OrderDetails", b =>
                {
                    b.HasOne("demo.Models.BookingTbl", "BookingTbl")
                        .WithMany("OrderDetails")
                        .HasForeignKey("BookingTblBookingId");

                    b.HasOne("demo.Models.OrderMasterTbl", "OrderMasterTbl")
                        .WithMany("Details")
                        .HasForeignKey("OrderMasterTblOrderMasterId");

                    b.Navigation("BookingTbl");

                    b.Navigation("OrderMasterTbl");
                });

            modelBuilder.Entity("demo.Models.OrderMasterTbl", b =>
                {
                    b.HasOne("demo.Models.UserTbl", "user")
                        .WithMany("OrderMasterTbls")
                        .HasForeignKey("UserId");

                    b.Navigation("user");
                });

            modelBuilder.Entity("demo.Models.BookingTbl", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("demo.Models.MovieTbl", b =>
                {
                    b.Navigation("Bookings");
                });

            modelBuilder.Entity("demo.Models.OrderMasterTbl", b =>
                {
                    b.Navigation("Details");
                });

            modelBuilder.Entity("demo.Models.UserTbl", b =>
                {
                    b.Navigation("BookingTbls");

                    b.Navigation("OrderMasterTbls");
                });
#pragma warning restore 612, 618
        }
    }
}
